@use "~/scss/common/utils" as *;
@use "~/scss/common/index" as *;

%dropdown-button {
  background-color: transparent;
  border: none;
  box-sizing: border-box;
  color: var(--gray-900);
  cursor: pointer;
  font-size: rem(16);
  height: rem(52);
  line-height: 1.3;
  padding: 0;
  text-align: left;
  width: 100%;

  &:disabled {
    color: var(--gray-400);
  }
}

.dropdown-wrap {
  position: relative;

  .dropdown-result {
    background-color: var(--white);
    border: rem(1) solid var(--gray-300);
    border-radius: rem(12);
    overflow: hidden;
    position: relative;

    > button {
      @extend %dropdown-button;

      color: var(--gray-600);
      font-weight: 500;
      padding: 0 rem(40) 0 rem(16);

      &::after {
        background: url(/images/icons/common/icon-dropdown-arrow.svg) no-repeat 0 0;
        background-size: rem(20);
        content: "";
        display: block;
        height: rem(20);
        position: absolute;
        right: rem(16);
        top: rem(16);
        transform: rotate(0deg);
        transition: transform 0.3s ease(out-expo);
        width: rem(20);
      }
    }
  }

  .dropdown-list {
    > li {
      > button {
        @extend %dropdown-button;

        color: var(--gray-900);
        height: rem(48);
        padding: 0;
      }
    }
  }
  /* stylelint-disable-next-line selector-pseudo-class-no-unknown */
  .dropdown-list:deep() {
    border: 0;
    border-radius: 0 0 rem(12) rem(12);
    max-height: rem(200);
    overflow-x: hidden;
    overflow-y: auto;
    position: absolute;
    width: 100%;
    z-index: 1;

    > li {
      background-color: var(--white);
      height: rem(48);
      padding: 0 rem(16);

      + li {
        border-top: rem(1) solid var(--gray-200);
      }

      &.is-selected,
      &:hover {
        background-color: var(--gray-200);
      }
    }
  }

  .dropdown-msg {
    @include input-msg;
  }

  &.is-active {
    .dropdown-result {
      border-bottom: 0;
      border-color: var(--gray-900);
      border-radius: rem(12) rem(12) 0 0;
      z-index: 2;

      > button {
        border-bottom: rem(1) solid var(--gray-200);

        &::after {
          transform: rotate(180deg);
        }
      }
    }

    .dropdown-list {
      background-color: var(--white);
      border: rem(1) solid var(--gray-900);
      border-top: 0;
    }
  }

  &.is-selected {
    .dropdown-result button {
      color: var(--gray-900);
    }
  }

  &.is-error {
    .dropdown-result,
    .dropdown-list {
      border-color: var(--ns-error);
    }
  }

  &.is-disabled {
    pointer-events: none;

    .dropdown-result,
    .dropdown-list {
      background-color: var(--gray-100);
      border-color: var(--gray-300);

      > button {
        color: var(--gray-400);
      }
    }

    .dropdown-result {
      > button::after {
        background: url(/images/icons/common/icon-dropdown-disabled.svg) no-repeat 0 0;
        background-size: rem(20);
      }
    }
  }

  &.is-flat {
    .dropdown-list {
      position: relative;
    }
  }

  &.is-small:deep() {
    .dropdown-result {
      button {
        font-size: rem(14);
        height: rem(44);

        &::after {
          background-size: rem(16);
          height: rem(16);
          width: rem(16);
        }
      }
    }

    .dropdown-list {
      li {
        height: rem(44);

        button:first-of-type {
          font-size: rem(14);
          height: rem(44);
        }
      }
    }
  }

  &.is-slot:deep() {
    .dropdown-list {
      li {
        align-items: center;
        display: flex;

        button:first-of-type {
          @extend %dropdown-button;

          flex: 1;
        }

        .remaining {
          color: var(--red-500);
          font-size: rem(12);
        }

        .restock-btn {
          @include border-btn-type($color: var(--gray-800), $border-color: var(--gray-300), $height: rem(22), $font: rem(11));

          align-items: center;
          background-color: var(--white);
          border-radius: rem(12);
          display: flex;
          font-weight: 500;
          justify-content: center;
          padding: 0;
          right: rem(8);
          white-space: nowrap;
          width: rem(77);

          &::after {
            content: "재입고알림";
            margin-left: rem(2);
          }

          .icon {
            @include hide-txt;

            background: url("/images/icons/order/icon-alarm-black.svg") no-repeat center center/ 100%;
            height: rem(12);
            margin: 0;
            width: rem(12);
          }

          &.is-active {
            .icon {
              background: url("/images/icons/order/icon-alarm-red.svg") no-repeat center center/ 100%;
            }

            &::after {
              content: "알림받는중";
            }
          }
        }
      }
    }
  }

  .dropdown {
    &-enter-active {
      transition: height 0.7s ease(inout-expo);
    }

    &-leave-active {
      transition: height 0.1s ease(out-expo);
    }
  }
}
