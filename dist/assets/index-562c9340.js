import{d as s,ab as n,ad as a,o as l,c as p,a as o,a4 as e,a2 as E,b as t,e as c,u as r,a9 as F,ae as D,a6 as y}from"./index-e42e774a.js";const C={id:"trigger"},i=s({__name:"observe",emits:["intersect"],setup(s,{emit:o}){let e;const E={root:null,threshold:.1};return n((()=>{try{const s=document.querySelector("#trigger");e=new IntersectionObserver((([s])=>{(([s])=>{s&&s.isIntersecting&&o("intersect")})([s])}),E),e.observe(s)}catch(s){}})),a((()=>{e.disconnect()})),(s,n)=>(l(),p("div",C))}}),u={class:"prose prose-sm text-left"},A=[o('<pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code class="language-ts"><span class="line"><span style="color:#616E88;">// utils</span></span>\n<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">httpRequest</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">from</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">@/utils/request</span><span style="color:#ECEFF4;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// components</span></span>\n<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">Observer</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">from</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">./observe.vue</span><span style="color:#ECEFF4;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 더미 데이터를 위한 API 통신</span></span>\n<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">request</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">httpRequest</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#D8DEE9;">baseURL</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">https://dummyjson.com</span><span style="color:#ECEFF4;">&#39;</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 실제 뿌려질 데이터를 담기 위한 배열</span></span>\n<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">items</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">ref</span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">any</span><span style="color:#ECEFF4;">&gt;</span><span style="color:#D8DEE9FF;">([])</span></span>\n<span class="line"><span style="color:#616E88;">// 추가적으로 불러올 아이템 갯수</span></span>\n<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">offset</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">ref</span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">number</span><span style="color:#ECEFF4;">&gt;</span><span style="color:#D8DEE9FF;">(</span><span style="color:#B48EAD;">4</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// trigger 까지 도달했을때 불려질 함수</span></span>\n<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">intersected</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">async</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">()</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">try</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">res</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">await</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">request</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">get</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#D8DEE9;">url</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">users</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#D8DEE9;">params</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">limit</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">4</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">skip</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">offset</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">value</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">offset</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">value</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">4</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">i</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">in</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">res</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">users</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#D8DEE9;">items</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">value</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">push</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">res</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">users</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">i</span><span style="color:#D8DEE9FF;">])</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">catch</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">e</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">error</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">e</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span></code></pre><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code class="language-ts"><span class="line"><span style="color:#81A1C1;">import</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9;">request</span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">from</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">@/utils/request</span><span style="color:#ECEFF4;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">getDataList</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">any</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">async</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">()</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">try</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">result</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">await</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">request</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">get</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#D8DEE9;">url</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">/v1/home/topbanner</span><span style="color:#ECEFF4;">&#39;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">result</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">catch</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">e</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">error</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">e</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span></code></pre>',2)],m={__name:"index",setup:(s,{expose:n})=>(n({frontmatter:{}}),(s,n)=>(l(),p("div",u,A)))},d={class:"text-nm"},g={class:"mb-50"},f=t("div",{"data-name":"title",class:"text-amber-200 bg-neutral pa-3 text-xl"},"사용법",-1),b=t("div",{"data-name":"title",class:"text-amber-200 bg-neutral pa-3 text-xl"},"사용 예시",-1),v=["src","alt"],B=s({__name:"index",setup(s){const n=e({baseURL:"https://dummyjson.com"}),a=E([]),o=E(4),C=async()=>{try{const s=await n.get({url:"users",params:{limit:4,skip:o.value}});o.value+=4;for(let n in s.users)a.value.push(s.users[n])}catch(s){}};return(s,n)=>(l(),p("div",d,[t("div",g,[f,c(r(m))]),t("div",null,[b,t("ul",null,[(l(!0),p(F,null,D(r(a),(s=>(l(),p("li",{class:"list-item list-none",key:s.id},[t("img",{src:s.image,alt:s.id},null,8,v),t("p",null,"Name : "+y(s.lastName),1)])))),128))]),c(i,{onIntersect:C})])]))}});export{B as default};
