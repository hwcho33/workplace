import{o as s,c as n,a,d as l,b as p,e as o,u as e,a9 as E}from"./index-e42e774a.js";const t={class:"prose prose-sm text-left"},c=[a("<p><strong>깊은 복사</strong>(deep)는 객체를 복사 할 때, <strong>객체</strong>와 <strong>인스턴스 변수</strong>까지 복사하는 방식입니다.</p><p><strong>얕은 복사</strong>(shallow)와 달리 주소 값을 <strong>참조</strong>하는것이 아니라 <strong>새 주소 값</strong>에 담기 떄문에 주소 값이 <strong>공유</strong>되지 않습니다.</p><p>깊은 복사하는 방법으로 <strong>Object.assign()</strong>, <strong>spread</strong> 연산으로도 진행 할 수 있지만, 깊은 <strong>depth</strong> 까지 완벽하게 되지 않는 경우가 있습니다.</p><p>프로젝트 구성으로 <strong>lodash-es</strong> 의존성을 탑재했으니, 다음 예제를 참고하시면 됩니다.</p>",4)],r={__name:"deep-first",setup:(a,{expose:l})=>(l({frontmatter:{}}),(a,l)=>(s(),n("div",t,c)))},D={class:"prose prose-sm text-left"},F=[a('<p><strong>Lodash</strong> 라이브러리에서 제공하는 <strong>clonedeep</strong> 을 활용한 예제 입니다.</p><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code class="language-ts"><span class="line"><span style="color:#616E88;">// 의존성</span></span>\n<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">clonedeep</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">from</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">lodash-es</span><span style="color:#ECEFF4;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 일반 객체 선언</span></span>\n<span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">defaultObject</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">a</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">b</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// clonedeep 함수 사용한 clone</span></span>\n<span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">cloneObject</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">clonedeep</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">defaultObject</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 메모리 주소를 참조하지 않으므로 false 출력</span></span>\n<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">defaultObject</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">===</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">cloneObject</span><span style="color:#D8DEE9FF;">) </span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 내부 객체를 갖는 객체 선언</span></span>\n<span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">hasInnerObject</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">a</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">b</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">2</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">d</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">3</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// clonedeep 함수 사용한 clone</span></span>\n<span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">cloneHasInnerObject</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">clonedeep</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">hasInnerObject</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 메모리 주소를 참조하지 않으므로 false 출력 </span></span>\n<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">cloneHasInnerObject</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">c</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">===</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">hasInnerObject</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">c</span><span style="color:#D8DEE9FF;">) </span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 내부 객체 프로퍼티 변경</span></span>\n<span class="line"><span style="color:#D8DEE9;">hasInnerObject</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">d</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">5</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">hasInnerObject</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">c</span><span style="color:#D8DEE9FF;">) </span><span style="color:#616E88;">// {d: 5}</span></span>\n<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">cloneHasInnerObject</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">c</span><span style="color:#D8DEE9FF;">) </span><span style="color:#616E88;">//{d: 3}</span></span>\n<span class="line"></span></code></pre>',2)],y={__name:"deep-second",setup:(a,{expose:l})=>(l({frontmatter:{}}),(a,l)=>(s(),n("div",D,F)))},C={class:"text-nm"},i={class:"mb-24"},d=p("div",{class:"text-amber-200 bg-neutral pa-3 text-3xl"},"서론",-1),g=p("div",{class:"text-amber-200 bg-neutral pa-3 text-3xl"},"예제",-1),b=l({__name:"deep",setup:a=>(a,l)=>(s(),n(E,null,[p("div",C,[p("div",i,[d,o(e(r))])]),p("div",null,[g,o(e(y))])],64))});export{b as default};
