import{o as s,c as n,b as a,f as l,a as p,d as o,e,u as E}from"./index-e42e774a.js";const c={class:"prose prose-sm text-left"},t=[a("p",null,[a("strong",null,"객체"),l("를 새로운 변수에 선언하게 되면 참조 형태로 값이 존재하게 됩니다.")],-1),a("p",null,[l("이를 "),a("strong",null,"얕은 복사(Shallow Copy)"),l(" 라고 하며, "),a("strong",null,"배열"),l(" 또한 "),a("strong",null,"객체"),l(" 와 동일하게 동작합니다.")],-1)],r={__name:"shallow-first",setup:(a,{expose:l})=>(l({frontmatter:{}}),(a,l)=>(s(),n("div",c,t)))},D={class:"prose prose-sm text-left"},F=[p('<p>다음 예제는 <strong>구조분해할당</strong> 으로 객체를 <strong>Clone</strong> 하는 예제입니다.</p><p>참조로 걸리지 않기 때문에 비교문에서 <strong>false</strong>가 출력 되는 것을 볼 수 있습니다.</p><p>하지만, <strong>내부 객체</strong>가 존재하는 객체일 경우 결과가 다릅니다.</p><p><strong>내부 객체가</strong> 존재하는 경우에는 객체를 Clone 후 객체 비교시 참조가 걸려 비교문에서 출력시 <strong>true</strong>가 발생합니다. 또한, 본래 객체의 값을 변경할 경우 Clone 된 객체 역시 변경되는 것을 확인할 수 있습니다.</p><p>따라서, 이러한 부분을 <strong>고려하여</strong> 개발해야 합니다.</p><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code class="language-ts"><span class="line"><span style="color:#616E88;">// 구조분해할당(Destructing Assignment) 사용</span></span>\n<span class="line"><span style="color:#616E88;">// 일반 객체 선언</span></span>\n<span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">defaultObject</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">a</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">b</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">2</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 구조분해 할당을 통해 객체 Clone</span></span>\n<span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">cloneObject</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">...</span><span style="color:#D8DEE9;">defaultObject</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">cloneObject</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">===</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">defaultObject</span><span style="color:#D8DEE9FF;">) </span><span style="color:#616E88;">// false</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 내부 객체가 존재하는 객체 선언</span></span>\n<span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">hasInnerObject</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">a</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">b</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">2</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">d</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">3</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 구조분해 할당을 통해 객체 Clone</span></span>\n<span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">cloneHasInnerObject</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">...</span><span style="color:#D8DEE9;">hasInnerObject</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 내부객체 여부 확인 시 true</span></span>\n<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">hasInnerObject</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">c</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">===</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">cloneHasInnerObject</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">c</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 내부 객체 프로퍼티 변경</span></span>\n<span class="line"><span style="color:#D8DEE9;">hasInnerObject</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">d</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">4</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 객체 참조가 걸려있으므로, 변경된 값 출력</span></span>\n<span class="line"><span style="color:#616E88;">// a: 1 b: 2 c: {d: 4}</span></span>\n<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">hasInnerObject</span><span style="color:#D8DEE9FF;">) </span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// a: 1 b: 2 c: {d: 4}</span></span>\n<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">cloneHasInnerObject</span><span style="color:#D8DEE9FF;">) </span></span>\n<span class="line"></span></code></pre>',6)],y={__name:"shallow-second",setup:(a,{expose:l})=>(l({frontmatter:{}}),(a,l)=>(s(),n("div",D,F)))},C={class:"prose prose-sm text-left"},i=[p('<p>위 예시에서 볼 수 있듯이, <strong>얇은 복사</strong>는 원본을 참조하는 방식으로 복사가 됩니다.</p><p>따라서, 원본 객체의 <strong>속성 값</strong>을 변경 할 경우, 복사된 객체 또한 <strong>속성</strong>이 동일하게 변경됩니다.</p><p>따라서, <strong>확실히 분리된 객체</strong>로 복사할 경우 사용하면 안됩니다.</p><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code class="language-ts"><span class="line"><span style="color:#616E88;">// 원 객체 선언</span></span>\n<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">sampleObject</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">a</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">b</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">2</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 얇은 복사(Shallow Copy)</span></span>\n<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">copyObject</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">sampleObject</span><span style="color:#D8DEE9FF;"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 복사된 객체 출력 {a: 1, b: 2}</span></span>\n<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">copyObject</span><span style="color:#D8DEE9FF;">) </span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">copyObject</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">===</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">sampleObject</span><span style="color:#D8DEE9FF;">) </span><span style="color:#616E88;">// true</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 원 객체 속성 변경</span></span>\n<span class="line"><span style="color:#D8DEE9;">sampleObject</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">a</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">2</span><span style="color:#D8DEE9FF;"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 복사된 객체 출력 {a: 2, b: 2}</span></span>\n<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">copyObject</span><span style="color:#D8DEE9FF;">) </span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">copyObject</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">===</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">sampleObject</span><span style="color:#D8DEE9FF;">) </span><span style="color:#616E88;">// true</span></span>\n<span class="line"></span></code></pre>',4)],g={__name:"shallow-third",setup:(a,{expose:l})=>(l({frontmatter:{}}),(a,l)=>(s(),n("div",C,i)))},b={class:"text-nm"},d={class:"mb-24"},A=a("div",{class:"text-amber-200 bg-neutral pa-3 text-3xl"},"서론",-1),u={class:"mb-24"},m=a("div",{class:"text-amber-200 bg-neutral pa-3 text-3xl"},"구조 분해 할당 활용",-1),j={class:"mb-24"},O=a("div",{class:"text-amber-200 bg-neutral pa-3 text-3xl"},"얇은 복사의 객체 참조",-1),x=o({__name:"shallow",setup:l=>(l,p)=>(s(),n("div",b,[a("div",d,[A,e(E(r))]),a("div",u,[m,e(E(y))]),a("div",j,[O,e(E(g))])]))});export{x as default};
