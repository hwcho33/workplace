import{o as s,c as n,a,b as l,at as p,d as o,a2 as e,ab as E,am as t,ap as r,u as c,aq as F,a6 as y,ai as D,a9 as C,e as i}from"./index-e42e774a.js";const d={class:"prose prose-sm text-left"},u=[a('<p>기존 AS-IS 앱에서 우리는 <strong>mixin</strong> 을 활용하여 도메인적인 부분의 함수 로직 혹은 재사용가능한 함수를 작성하였습니다.</p><p>이번 프로젝트에서 <strong>Vue3</strong> 로 버전업을 진행하게 되면서 더이상 <strong>Mixin</strong> 의 방식의 복잡한 함수 재사용이 아닌 이를 대체하기 위해 새로운 개발방식인 <strong>Composable(컴포저블)</strong> 을 통해서 재사용하기를 권고 하고 있습니다.</p><img width="834" alt="image" src="https://user-images.githubusercontent.com/56063287/211442067-22743307-db64-4b78-80fc-af30825720f7.png"><p>우리는 기존의 <strong>Optional API</strong> 가 아닌 <strong>Composition API</strong> 를 사용함에 따라 이러한 <strong>Mixin</strong> 또한 <strong>Composable</strong> 한 방식으로 변경하게 되었습니다.</p>',4)],A={__name:"introduction",setup:(a,{expose:l})=>(l({frontmatter:{}}),(a,l)=>(s(),n("div",d,u)))},m={class:"prose prose-sm text-left"},B=[a('<p><strong>Composable(컴포저블)</strong> 은 <strong>Composition API</strong> 을 활용하여 <strong>상태 저장 로직</strong> 을 캡슐화 화고 재사용하는 함수이다.</p><p>이는 공식문서에서 설명하고 있습니다.</p><p>정리해서 말해보자면 <strong>프론트앤드</strong> 앱을 구축할 경우 여러 컴포넌트에서 효율적으로 같은 작업을 하기 위해 재사용이 필요한 함수들을 생성한다는 의미 입니다.</p><p>우리는 <strong>Composition API</strong> 를 사용하면서 가장 이점은 <strong>반응형</strong> 을 가지고 있기 떄문에 상태를 저장하고 캡슐화 한다는 말이 나온것입니다.</p><p>공식문서에서 나오는 <strong>mouse</strong> 예제 입니다.</p><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code class="language-ts"><span class="line"><span style="color:#616E88;">// mouse.js</span></span>\n<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">ref</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">onMounted</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">onUnmounted</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">from</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">vue</span><span style="color:#ECEFF4;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 관례상, 컴포저블 함수 이름은 &quot;use&quot;로 시작합니다.</span></span>\n<span class="line"><span style="color:#81A1C1;">export</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">function</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">useMouse</span><span style="color:#ECEFF4;">()</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#ECEFF4;">  </span><span style="color:#616E88;">// 컴포저블로 캡슐화된 내부에서 관리되는 상태</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">x</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">ref</span><span style="color:#D8DEE9FF;">(</span><span style="color:#B48EAD;">0</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">y</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">ref</span><span style="color:#D8DEE9FF;">(</span><span style="color:#B48EAD;">0</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ECEFF4;">  </span><span style="color:#616E88;">// 컴포저블은 시간이 지남에 따라 관리되는 상태를 업데이트할 수 있습니다.</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">function</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">update</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">event</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">value</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">event</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">pageX</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">y</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">value</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">event</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">pageY</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ECEFF4;">  </span><span style="color:#616E88;">// 컴포저블은 또한 이것을 사용하는 컴포넌트의 수명주기에 연결되어</span></span>\n<span class="line"><span style="color:#ECEFF4;">  </span><span style="color:#616E88;">// 사이드 이펙트를 설정 및 해제할 수 있습니다.</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#88C0D0;">onMounted</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">()</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">window</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">addEventListener</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">mousemove</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">update</span><span style="color:#D8DEE9FF;">))</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#88C0D0;">onUnmounted</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">()</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">window</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">removeEventListener</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">mousemove</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">update</span><span style="color:#D8DEE9FF;">))</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ECEFF4;">  </span><span style="color:#616E88;">// 관리 상태를 반환 값으로 노출</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">y</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#81A1C1;">&lt;/</span><span style="color:#D8DEE9;">script</span><span style="color:#81A1C1;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// index.vue</span></span>\n<span class="line"><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9;">script</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">setup</span><span style="color:#81A1C1;">&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">useMouse</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">from</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">./mouse.js</span><span style="color:#ECEFF4;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">y</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">useMouse</span><span style="color:#D8DEE9FF;">()</span></span>\n<span class="line"><span style="color:#81A1C1;">&lt;/</span><span style="color:#D8DEE9;">script</span><span style="color:#81A1C1;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D8DEE9FF;">&lt;</span><span style="color:#8FBCBB;">template</span><span style="color:#D8DEE9FF;">&gt;</span><span style="color:#D8DEE9;">마우스</span><span style="color:#D8DEE9FF;"> 위치</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">x</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}},</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">y</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}}</span><span style="color:#81A1C1;">&lt;/</span><span style="color:#D8DEE9;">template</span><span style="color:#81A1C1;">&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">&lt;/</span><span style="color:#D8DEE9;">script</span><span style="color:#81A1C1;">&gt;</span></span>\n<span class="line"></span></code></pre><p>위 코드에서 볼 수 있듯이 <strong>mouse</strong> 의 x, y 좌표값은 <strong>EventListener</strong> 를 통해서 계속해서 변경됩니다.</p><p>이러한 값들을 반응형 ref 변수인 x,y 에 매핑한 후 반응형 상태 자체를 리턴해준다는 의미입니다.</p><p>이렇게 되면 실제 아래 index.vue 와 같이 마우스의 x,y 좌표가 필요한 경우 우리는 이 로직을 재사용 할 수 있게 됩니다.</p><p>단, 위와 같은 경우에는 <strong>Vue Life Cycle</strong> 에서 <strong>Unmount</strong> 되기 전에는 해당 반응형 변수가 계속해서 동작하므로 반드시 <strong>Remove</strong> 를 해줘야 한다는 부분이다.</p><p>이는 컴포저블이 아니더라도 필수적인 부분이기 떄문에 넘어가도록 한다.</p><p>더 자세한 예시와 mixin과의 차이는 아래 공식 문서를 참고 하시기 바랍니다.</p><ul><li>공식문서 : (<a href="https://v3-docs.vuejs-korea.org/guide/reusability/composables.html">https://v3-docs.vuejs-korea.org/guide/reusability/composables.html</a>)[<a href="https://v3-docs.vuejs-korea.org/guide/reusability/composables.html">https://v3-docs.vuejs-korea.org/guide/reusability/composables.html</a>]</li></ul>',13)],g={__name:"composable",setup:(a,{expose:l})=>(l({frontmatter:{}}),(a,l)=>(s(),n("div",m,B)))},f={class:"prose prose-sm text-left"},v=[a('<p>위에서 설명한 <strong>컴포저블</strong> 함수를 활용해서 <strong>Validation Check</strong> 와 관련된 간단한 코드를 작성하였다.</p><p>먼저 우리는 <strong>input</strong> 박스에 이름, 휴대폰 번호, 이메일 등을 기입할 것이다.</p><p>이때 관련된 함수를 컴포저블하게 분리 시킨 후 재사용할 계획이다.</p><p>먼저 파일 구조는 아래와 같다.</p><p><strong>부모</strong> : index.vue</p><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code class="language-vue"><span class="line"><span style="color:#D8DEE9FF;">// index.vue</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#81A1C1;">&lt;template&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">&lt;div</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">class</span><span style="color:#ECEFF4;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">text-nm</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;div</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">class</span><span style="color:#ECEFF4;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">mb-20</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9;">NameField</span><span style="color:#81A1C1;"> /&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#81A1C1;">&lt;br</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">/&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9;">PhoneField</span><span style="color:#81A1C1;"> /&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#81A1C1;">&lt;br</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">/&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9;">EmailField</span><span style="color:#81A1C1;"> /&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;/div&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">&lt;/div&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">&lt;/template&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#81A1C1;">&lt;script</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">lang</span><span style="color:#ECEFF4;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">ts</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">setup</span><span style="color:#81A1C1;">&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">IntroductionMd</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">from</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">./md/introduction.md</span><span style="color:#ECEFF4;">&#39;</span></span>\n<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">ComposableMd</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">from</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">./md/composable.md</span><span style="color:#ECEFF4;">&#39;</span></span>\n<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">ExampleMd</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">from</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">./md/example.md</span><span style="color:#ECEFF4;">&#39;</span></span>\n<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">EmailField</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">from</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">#/pages/composable/components/email-field.vue</span><span style="color:#ECEFF4;">&#39;</span></span>\n<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">NameField</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">from</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">#/pages/composable/components/name-field.vue</span><span style="color:#ECEFF4;">&#39;</span></span>\n<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">PhoneField</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">from</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">#/pages/composable/components/phone-field.vue</span><span style="color:#ECEFF4;">&#39;</span></span>\n<span class="line"><span style="color:#81A1C1;">&lt;/script&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre><p>해당 example 은 <strong>컴포넌트 재사용</strong>이아닌 <strong>ts 재사용</strong>을 위해 작성하였으므로, <strong>컴포넌트 재사용측면</strong>은 배제한다.</p><p>실제 부모 컴포넌트에서는 각각의 필드 <strong>자식 컴포넌트를 불러오는 역할</strong>뿐이다.</p><p><strong>자식</strong> : email-field.vue,name-field.vue,phone-field.vue</p><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code class="language-vue"><span class="line"><span style="color:#D8DEE9FF;">// email-field.vue</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#81A1C1;">&lt;template&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">&lt;input</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#8FBCBB;">type</span><span style="color:#ECEFF4;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">phone</span><span style="color:#ECEFF4;">&quot;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#8FBCBB;">placeholder</span><span style="color:#ECEFF4;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">Email Address</span><span style="color:#ECEFF4;">&quot;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#8FBCBB;">autocomplete</span><span style="color:#ECEFF4;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">off</span><span style="color:#ECEFF4;">&quot;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#8FBCBB;">v-model</span><span style="color:#ECEFF4;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">input</span><span style="color:#ECEFF4;">&quot;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#8FBCBB;">@keyup</span><span style="color:#ECEFF4;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">validateInput</span><span style="color:#ECEFF4;">&quot;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#8FBCBB;">@blur</span><span style="color:#ECEFF4;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">validateInput</span><span style="color:#ECEFF4;">&quot;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">/&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">&lt;div</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">class</span><span style="color:#ECEFF4;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">text-red</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">v-if</span><span style="color:#ECEFF4;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">errors</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">&gt;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    {{ errors.email }}</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">&lt;/div&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">&lt;/template&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#81A1C1;">&lt;script</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">lang</span><span style="color:#ECEFF4;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">ts</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">setup</span><span style="color:#81A1C1;">&gt;</span></span>\n<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">ref</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">from</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">vue</span><span style="color:#ECEFF4;">&#39;</span></span>\n<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">useFormValidation</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">from</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">@/composables/validator/useFormValidation</span><span style="color:#ECEFF4;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">input</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">ref</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;&#39;</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 각 필드마다 가져오는 validationField 함수가 다르다.</span></span>\n<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">validateEmailField</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">errors</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">useFormValidation</span><span style="color:#D8DEE9FF;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#88C0D0;">onMounted</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">()</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#88C0D0;">validateInput</span><span style="color:#D8DEE9FF;">()</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">validateInput</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">()</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#88C0D0;">validateEmailField</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">email</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">input</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">value</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#81A1C1;">&lt;/script&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre><p>우리는 해당 컴포넌트의 인스턴스가 <strong>Mount</strong> 된다면 <strong>validateInput</strong> 함수를 실행하게 되며 해당 함수는 <strong>validationEmailField</strong> 함수를 호출한다.</p><p>해당 함수는 <strong>useFormValidation</strong> 컴포저블 ts 에서 받아온 각각 필드에 맞는 함수라고 생각하면 된다.</p><p><strong>composable ts</strong> : useFormValidation.ts , useValidator.ts</p><p>이제 각 필드에 필요한 함수를 재사용하는 ts 파일을 본다.</p><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code class="language-ts"><span class="line"><span style="color:#616E88;">// useFormValidation.ts</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">reactive</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">from</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">vue</span><span style="color:#ECEFF4;">&#39;</span></span>\n<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">useValidators</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">from</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">@/composables/validator/useValidator</span><span style="color:#ECEFF4;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// Error 에 대한 타입을 명시해주었다.</span></span>\n<span class="line"><span style="color:#81A1C1;">interface</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">errorsType</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  email</span><span style="color:#81A1C1;">?:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  name</span><span style="color:#81A1C1;">?:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  phone</span><span style="color:#81A1C1;">?:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 실제 반응형 상태를 저장하기 위해  reactive 를 사용하여 선언한다. </span></span>\n<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">errors</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">reactive</span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">errorsType</span><span style="color:#ECEFF4;">&gt;</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{}</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#81A1C1;">export</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">default</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">function</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">useFormValidation</span><span style="color:#ECEFF4;">()</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#ECEFF4;">  </span><span style="color:#616E88;">// 각각 Validation Util 재사용 함수를 가져온다.</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">isNum</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">isEmail</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">isEmpty</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">minLength</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">useValidators</span><span style="color:#D8DEE9FF;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ECEFF4;">  </span><span style="color:#616E88;">// name, email, phone Number 에 대해서 체크할 수 있는 함수를 작성한다.</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">validateNameField</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">fieldName</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldValue</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">errors</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">fieldName</span><span style="color:#D8DEE9FF;">] </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">!</span><span style="color:#D8DEE9;">fieldValue</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#81A1C1;">?</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">isEmpty</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldName</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldValue</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">minLength</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldName</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldValue</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">min</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">2</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">validateEmailField</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">fieldName</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldValue</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">errors</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">fieldName</span><span style="color:#D8DEE9FF;">] </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">!</span><span style="color:#D8DEE9;">fieldValue</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#81A1C1;">?</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">isEmpty</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldName</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldValue</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">isEmail</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldName</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldValue</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">validatePhoneField</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">fieldName</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldValue</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">errors</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">fieldName</span><span style="color:#D8DEE9FF;">] </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">!</span><span style="color:#D8DEE9;">fieldValue</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#81A1C1;">?</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">isEmpty</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldName</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldValue</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">isNum</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldName</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldValue</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ECEFF4;">  </span><span style="color:#616E88;">// 반응형 데이터인 errors 와 각각의 체크 함수를 return 한다.</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">errors</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">validateNameField</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">validateEmailField</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">validatePhoneField</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span></code></pre><p>주석에도 써 놓았듯이 <strong>Error</strong> 의 경우 반응형 상태를 저장하고 반환한다.</p><p>그 외 Validation 을 체크할 수 있는 함수들을 함께 반환한다.</p><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code class="language-ts"><span class="line"><span style="color:#616E88;">// useValidator.ts</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// Validation 을 체크하기 위한 Props 의 타입을 정의한다.</span></span>\n<span class="line"><span style="color:#81A1C1;">interface</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">ValidationPropsType</span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">T</span><span style="color:#ECEFF4;">&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  fieldName</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">T</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  fieldValue</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">T</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  min</span><span style="color:#81A1C1;">?:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">number</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#81A1C1;">export</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">default</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">function</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">useValidate</span><span style="color:#ECEFF4;">()</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">isEmpty</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">({</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldName</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldValue</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">ValidationPropsType</span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">&gt;)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">!</span><span style="color:#D8DEE9;">fieldValue</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">?</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">`${</span><span style="color:#D8DEE9;">fieldName</span><span style="color:#ECEFF4;">}</span><span style="color:#A3BE8C;"> 정보를 입력해 주세요</span><span style="color:#ECEFF4;">`</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;&#39;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">minLength</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">fieldName</span><span style="color:#ECEFF4;">,</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">fieldValue</span><span style="color:#ECEFF4;">,</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">min</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">ValidationPropsType</span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">&gt;</span><span style="color:#D8DEE9FF;">) </span><span style="color:#81A1C1;">=&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">min</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldValue</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">length</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">min</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">?</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">`${</span><span style="color:#D8DEE9;">fieldName</span><span style="color:#ECEFF4;">}</span><span style="color:#A3BE8C;"> 은 최소 </span><span style="color:#ECEFF4;">${</span><span style="color:#D8DEE9;">min</span><span style="color:#ECEFF4;">}</span><span style="color:#A3BE8C;">자리 이상이 필요합니다.</span><span style="color:#ECEFF4;">`</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;&#39;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">isEmail</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">({</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldName</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldValue</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">ValidationPropsType</span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">&gt;)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">re</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#ECEFF4;">/</span><span style="color:#81A1C1;">^</span><span style="color:#ECEFF4;">(([</span><span style="color:#81A1C1;">^</span><span style="color:#EBCB8B;">&lt;&gt;()[\\]\\\\.,;:\\s@&quot;</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">+</span><span style="color:#ECEFF4;">(</span><span style="color:#EBCB8B;">\\.</span><span style="color:#ECEFF4;">[</span><span style="color:#81A1C1;">^</span><span style="color:#EBCB8B;">&lt;&gt;()[\\]\\\\.,;:\\s@&quot;</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">+</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">*</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">|</span><span style="color:#ECEFF4;">(</span><span style="color:#EBCB8B;">&quot;.</span><span style="color:#81A1C1;">+</span><span style="color:#EBCB8B;">&quot;</span><span style="color:#ECEFF4;">))</span><span style="color:#EBCB8B;">@</span><span style="color:#ECEFF4;">((</span><span style="color:#EBCB8B;">\\[</span><span style="color:#ECEFF4;">[</span><span style="color:#EBCB8B;">0-9</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">{1,3}</span><span style="color:#EBCB8B;">\\.</span><span style="color:#ECEFF4;">[</span><span style="color:#EBCB8B;">0-9</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">{1,3}</span><span style="color:#EBCB8B;">\\.</span><span style="color:#ECEFF4;">[</span><span style="color:#EBCB8B;">0-9</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">{1,3}</span><span style="color:#EBCB8B;">\\.</span><span style="color:#ECEFF4;">[</span><span style="color:#EBCB8B;">0-9</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">{1,3}</span><span style="color:#EBCB8B;">\\]</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">|</span><span style="color:#ECEFF4;">(([</span><span style="color:#EBCB8B;">a-zA-Z\\-0-9</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">+</span><span style="color:#EBCB8B;">\\.</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">+</span><span style="color:#ECEFF4;">[</span><span style="color:#EBCB8B;">a-zA-Z</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">{2,}</span><span style="color:#ECEFF4;">))</span><span style="color:#81A1C1;">$</span><span style="color:#ECEFF4;">/</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">!</span><span style="color:#D8DEE9;">re</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">test</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">fieldValue</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#81A1C1;">?</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">`${</span><span style="color:#D8DEE9;">fieldName</span><span style="color:#ECEFF4;">}</span><span style="color:#A3BE8C;"> 형식을 확인하시기 바랍니다.</span><span style="color:#ECEFF4;">`</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">      </span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;&#39;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">isNum</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">({</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldName</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">fieldValue</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">ValidationPropsType</span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">&gt;)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">isNum</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#EBCB8B;"> </span><span style="color:#ECEFF4;">/</span><span style="color:#81A1C1;">^</span><span style="color:#ECEFF4;">[</span><span style="color:#EBCB8B;">0-9</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">+$</span><span style="color:#ECEFF4;">/</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">test</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">fieldValue</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">!</span><span style="color:#D8DEE9;">isNum</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">?</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">`</span><span style="color:#A3BE8C;">- 을 제외한 </span><span style="color:#ECEFF4;">${</span><span style="color:#D8DEE9;">fieldName</span><span style="color:#ECEFF4;">}</span><span style="color:#A3BE8C;"> 정보를 정확히 입력하십시오.</span><span style="color:#ECEFF4;">`</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;&#39;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">  </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">isEmail</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">isEmpty</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">minLength</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">isNum</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre><p>위 코드를 보면 입력값에 따라서 <strong>Error Message</strong> 에 대한 상태를 변경하기 위해 위와 같이 샘플코드를 작성해 보았다.</p>',19)],V={__name:"example",setup:(a,{expose:l})=>(l({frontmatter:{}}),(a,l)=>(s(),n("div",f,v)))},x={class:"prose prose-sm text-left"},b=[l("p",null,"위 샘플에서 보면 실시간으로 해당 코드가 동작하는 것을 볼 수 있다.",-1),l("p",null,"결론은 우리는 기존에 사용했던 Mixin 대신 반응형을 활용하여 많은 효율적은 재사용 코드를 활용할 수 있을 것이다.",-1),l("p",null,"위 예제의 경우 간단한 샘플을 작성했을 뿐, 추후에 본개발 작성 시 위 개념을 익히고 작성한다면 효율적인 개발을 진행할 수 있을 것이다.",-1)],h={__name:"last",setup:(a,{expose:l})=>(l({frontmatter:{}}),(a,l)=>(s(),n("div",x,b)))};const N=p({});function q(){const{isNum:s,isEmail:n,isEmpty:a,minLength:l}={isEmail:({fieldName:s,fieldValue:n})=>/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(n)?"":`${s} 형식을 확인하시기 바랍니다.`,isEmpty:({fieldName:s,fieldValue:n})=>n?"":`${s} 정보를 입력해 주세요`,minLength:({fieldName:s,fieldValue:n,min:a})=>{if(a)return n.length<a?`${s} 은 최소 ${a}자리 이상이 필요합니다.`:""},isNum:({fieldName:s,fieldValue:n})=>/^[0-9]+$/.test(n)?"":`- 을 제외한 ${s} 정보를 정확히 입력하십시오.`};return{errors:N,validateNameField:(s,n)=>{N[s]=n?l({fieldName:s,fieldValue:n,min:4}):a({fieldName:s,fieldValue:n})},validateEmailField:(s,l)=>{N[s]=l?n({fieldName:s,fieldValue:l}):a({fieldName:s,fieldValue:l})},validatePhoneField:(n,l)=>{N[n]=l?s({fieldName:n,fieldValue:l}):a({fieldName:n,fieldValue:l})}}}const k={key:0,class:"text-red"},P=o({__name:"email-field",setup(a){let p=e("");const{validateEmailField:o,errors:i}=q();E((()=>{d()}));const d=()=>{o("email",p.value)};return(a,o)=>(s(),n(C,null,[t(l("input",{type:"phone",placeholder:"Email Address",autocomplete:"off","onUpdate:modelValue":o[0]||(o[0]=s=>F(p)?p.value=s:p=s),onKeyup:d,onBlur:d},null,544),[[r,c(p)]]),c(i)?(s(),n("div",k,y(c(i).email),1)):D("",!0)],64))}}),_={key:0,class:"text-red"},M=o({__name:"name-field",setup(a){let p=e("");const{validateNameField:o,errors:i}=q();E((()=>{d()}));const d=()=>{o("name",p.value)};return(a,o)=>(s(),n(C,null,[t(l("input",{type:"name",placeholder:"Name",autocomplete:"off","onUpdate:modelValue":o[0]||(o[0]=s=>F(p)?p.value=s:p=s),onKeyup:d,onBlur:d},null,544),[[r,c(p)]]),c(i)?(s(),n("div",_,y(c(i).name),1)):D("",!0)],64))}}),$={key:0,class:"text-red"},I=o({__name:"phone-field",setup(a){let p=e("");const{validatePhoneField:o,errors:i}=q();E((()=>{d()}));const d=()=>{o("phone",p.value)};return(a,o)=>(s(),n(C,null,[t(l("input",{type:"phone",placeholder:"Phone Number",autocomplete:"off","onUpdate:modelValue":o[0]||(o[0]=s=>F(p)?p.value=s:p=s),onKeyup:d,onBlur:d},null,544),[[r,c(p)]]),c(i)?(s(),n("div",$,y(c(i).phone),1)):D("",!0)],64))}}),L={class:"text-nm"},T={class:"mb-20"},j=l("div",{class:"text-amber-200 bg-neutral pa-3 text-3xl"},"서론",-1),U=l("div",{class:"text-amber-200 bg-neutral pa-3 text-3xl"},"Composable 은 무엇일까?",-1),w=l("div",{class:"text-amber-200 bg-neutral pa-3 text-3xl"},"Validation Check 샘플링 코드",-1),z=l("br",null,null,-1),Z=l("br",null,null,-1),K=l("br",null,null,-1),S=l("br",null,null,-1),O=l("div",{class:"text-amber-200 bg-neutral pa-3 text-3xl"},"결론",-1),R=o({__name:"index",setup:a=>(a,p)=>(s(),n("div",L,[l("div",T,[j,i(c(A)),U,i(c(g)),w,i(c(V)),z,i(M),Z,i(I),K,i(P),S,O,i(c(h))])]))});export{R as default};
